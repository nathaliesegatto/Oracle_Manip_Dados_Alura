-- TRIGGERS (GATILHOS)

-- tabela que sempre vai conter a soma das vendas
CREATE TABLE TAB_FATURAMENTO
(DATA_VENDA DATE NULL, TOTAL_VENDA FLOAT);

SELECT * FROM ITEMS_NOTAS;
SELECT * FROM NOTAS;
SELECT * FROM tab_faturamento;


-- SOMA TOTAL DE VENDAS (TABELA ITENS_NOTAS)
SELECT NOTAS.DATA_VENDA, SUM(ITEMS_NOTAS.QUANTIDADE * ITEMS_NOTAS.PRECO) AS TOTAL_VENDA
FROM NOTAS INNER JOIN ITEMS_NOTAS
ON NOTAS.NUMERO = ITEMS_NOTAS.NUMERO
GROUP BY NOTAS.DATA_VENDA;

-- insere soma do faturamento total na tabela tab_faturamento
INSERT INTO TAB_FATURAMENTO
(SELECT NOTAS.DATA_VENDA, SUM(ITEMS_NOTAS.QUANTIDADE * ITEMS_NOTAS.PRECO) AS TOTAL_VENDA
FROM NOTAS INNER JOIN ITEMS_NOTAS
ON NOTAS.NUMERO = ITEMS_NOTAS.NUMERO
GROUP BY NOTAS.DATA_VENDA);

-- CRIANDO A TRIGGER QUE VAI ALIMENTAR A TAB_FATURAMENTO AUTOMATICAMENTE
CREATE TRIGGER TG_CALCULO_FATURAMENTO 
AFTER INSERT ON ITEMS_NOTAS -- trigger será executada após inserts na tabela items_notas
BEGIN 
    DELETE FROM TAB_FATURAMENTO; -- apaga dados da tabela antes de inserir novos valores
    INSERT INTO TAB_FATURAMENTO
        (SELECT NOTAS.DATA_VENDA, SUM(ITEMS_NOTAS.QUANTIDADE * ITEMS_NOTAS.PRECO) AS TOTAL_VENDA
        FROM NOTAS INNER JOIN ITEMS_NOTAS
        ON NOTAS.NUMERO = ITEMS_NOTAS.NUMERO
        GROUP BY NOTAS.DATA_VENDA);
END;

-- TESTANDO A TRIGGER CRIADA

INSERT INTO NOTAS (NUMERO, DATA_VENDA, CPF, MATRICULA, IMPOSTO)
VALUES ('0103', TO_DATE('2019-06-05', 'YYYY-MM-DD'), '3623344710', '235', 0.10);

INSERT INTO ITEMS_NOTAS (NUMERO, CODIGO, QUANTIDADE, PRECO)
VALUES ('0103', '1000889', 1000, 10); -- RETORNA VALOR DO FATURMANTO ATUAL, CONFORME ESPERADO

UPDATE ITEMS_NOTAS SET QUANTIDADE = 500
WHERE NUMERO = '0103' AND CODIGO = '1000889';



-- ALTERANDO A TRIGGER PARA ATUALIZAR A TAB_FATURAMENTO AUTOMATICAMENTE APÓS UPDATE OU DELETE NA TABELA ITEMS_NOTAS
CREATE OR REPLACE TRIGGER TG_CALCULO_FATURAMENTO 
AFTER INSERT OR UPDATE OR DELETE ON ITEMS_NOTAS -- trigger será executada após inserts, updates ou deletes na tabela items_notas
BEGIN 
    DELETE FROM TAB_FATURAMENTO; -- apaga dados da tabela antes de inserir novos valores
    INSERT INTO TAB_FATURAMENTO
        (SELECT NOTAS.DATA_VENDA, SUM(ITEMS_NOTAS.QUANTIDADE * ITEMS_NOTAS.PRECO) AS TOTAL_VENDA
        FROM NOTAS INNER JOIN ITEMS_NOTAS
        ON NOTAS.NUMERO = ITEMS_NOTAS.NUMERO
        GROUP BY NOTAS.DATA_VENDA);
END;


















